// import { render } from '@testing-library/react';
// import Header from '@/components/Header';

// describe('MyComponent', () => {
//   test('renders correctly', () => {
//     const { getByTestId } = render(<Header />);
//     const component = getByTestId('header');
//     expect(component).toBeInTheDocument();
//   });
// });

// import { sum } from "../math.utils";

// describe("sum module", () => {
//   test("adds 1 + 2 to equal 3", () => {
//     expect(sum(1, 2)).toBe(3);
//   });
});

// import { render, screen } from "@testing-library/react";
// import { RecoilRoot, useRecoilValue } from "recoil";
// import { modalState } from "../../atoms/modalAtom";
// import Modal from "../../components/Modal";

// describe("Modal", () => {
//   it("renders the correct content when modal is open", () => {
//     // Set up initial state of the modalState atom
//     const initialState = { key: modalState.key, value: true };

//     // Render the component within a RecoilRoot provider and get the modal state
//     const { getByText } = render(
//       <RecoilRoot initializeState={({ set }) => set(modalState, initialState)}>
//         <Modal />
//       </RecoilRoot>
//     );
//     const modalText = getByText(/modal content/i);

//     // Assert that the modal content is rendered when the modal is open
//     expect(modalText).toBeInTheDocument();
//   });

//   it("renders the correct content when modal is closed", () => {
//     // Set up initial state of the modalState atom
//     const initialState = { key: modalState.key, value: false };

//     // Render the component within a RecoilRoot provider and get the modal state
//     const { getByText, queryByText } = render(
//       <RecoilRoot initializeState={({ set }) => set(modalState, initialState)}>
//         <Modal />
//       </RecoilRoot>
//     );
//     const modalText = queryByText(/modal content/i);

//     // Assert that the modal content is not rendered when the modal is closed
//     expect(modalText).toBeNull();

//     // Click a button to open the modal
//     const openButton = getByText(/open modal/i);
//     openButton.click();

//     // Assert that the modal content is rendered after the button is clicked
//     const newModalText = getByText(/modal content/i);
//     expect(newModalText).toBeInTheDocument();
//   });
// });

// import React from "react";
// import { render } from "@testing-library/react";
// import {
//   collection,
//   doc,
//   getDoc,
//   getDocs,
//   onSnapshot,
//   orderBy,
//   query,
// } from "firebase/firestore";
// import Posts from "../../components/Posts";

// // Mock Firestore database object
// const db = {
//   collection: jest.fn(() => ({
//     doc: jest.fn(() => ({
//       get: jest.fn(() => Promise.resolve({ data: () => ({}) })),
//     })),
//     add: jest.fn(() => Promise.resolve()),
//     get: jest.fn(() => Promise.resolve({ docs: [] })),
//     where: jest.fn(() => ({
//       get: jest.fn(() => Promise.resolve({ docs: [] })),
//     })),
//   })),
// };

// describe("Posts", () => {
//   it("renders a list of posts", async () => {
//     // Mock snapshot listener
//     const mockOnSnapshot = jest.fn((query, callback) => {
//       const mockSnapshot = {
//         docs: [
//           doc(db, "posts/1", {
//             username: "Alice",
//             profileImg: "alice.jpg",
//             image: "post.jpg",
//             review: "Great food!",
//             rating: 4,
//             restaurant: "Bistro",
//           }),
//           doc(db, "posts/2", {
//             username: "Bob",
//             profileImg: "bob.jpg",
//             image: "post.jpg",
//             review: "Amazing service!",
//             rating: 5,
//             restaurant: "Cafe",
//           }),
//         ],
//       };
//       callback(mockSnapshot);
//       return jest.fn();
//     });

//     jest.spyOn(React, "useEffect").mockImplementation((callback, deps) => {
//       if (deps[0] === db) {
//         callback();
//         return mockOnSnapshot;
//       }
//     });

//     const { getByText, getByAltText } = render(<Posts />);

//     // Wait for posts to render
//     await Promise.resolve();

//     // Assert that post data is rendered correctly
//     expect(getByText("Alice")).toBeInTheDocument();
//     expect(getByAltText("Alice")).toHaveAttribute("src", "alice.jpg");
//     expect(getByText("Great food!")).toBeInTheDocument();
//     expect(getByText("4")).toBeInTheDocument();
//     expect(getByText("Bistro")).toBeInTheDocument();

//     expect(getByText("Bob")).toBeInTheDocument();
//     expect(getByAltText("Bob")).toHaveAttribute("src", "bob.jpg");
//     expect(getByText("Amazing service!")).toBeInTheDocument();
//     expect(getByText("5")).toBeInTheDocument();
//     expect(getByText("Cafe")).toBeInTheDocument();
//   });
// });




------- DUMMY DATA --------------
// const posts = [
//   {
//     id: "123",
//     username: "rrezvani01",
//     userImg:
//       "https://fastly.picsum.photos/id/11/2500/1667.jpg?hmac=xxjFJtAPgshYkysU_aqx2sZir-kIOjNR9vx0te7GycQ",
//     img: "https://fastly.picsum.photos/id/11/2500/1667.jpg?hmac=xxjFJtAPgshYkysU_aqx2sZir-kIOjNR9vx0te7GycQ",
//     caption: "This is dope",
//   },
//   {
//     id: "456",
//     username: "kitokazu",
//     userImg:
//       "https://fastly.picsum.photos/id/15/2500/1667.jpg?hmac=Lv03D1Y3AsZ9L2tMMC1KQZekBVaQSDc1waqJ54IHvo4",
//     img: "https://fastly.picsum.photos/id/15/2500/1667.jpg?hmac=Lv03D1Y3AsZ9L2tMMC1KQZekBVaQSDc1waqJ54IHvo4",
//     caption: "How interesting",
//   },
//   {
//     id: "789",
//     username: "cattleLover123",
//     userImg:
//       "https://fastly.picsum.photos/id/22/4434/3729.jpg?hmac=fjZdkSMZJNFgsoDh8Qo5zdA_nSGUAWvKLyyqmEt2xs0",
//     img: "https://fastly.picsum.photos/id/22/4434/3729.jpg?hmac=fjZdkSMZJNFgsoDh8Qo5zdA_nSGUAWvKLyyqmEt2xs0",
//     caption: "What an awesome day",
//   },
//   {
//     id: "101112",
//     username: "warriorsLover123",
//     userImg:
//       "https://fastly.picsum.photos/id/1/5000/3333.jpg?hmac=Asv2DU3rA_5D1xSe22xZK47WEAN0wjWeFOhzd13ujW4",
//     img: "https://fastly.picsum.photos/id/1/5000/3333.jpg?hmac=Asv2DU3rA_5D1xSe22xZK47WEAN0wjWeFOhzd13ujW4",
//     caption: "Coolio",
//   },
// ];


      {/* <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB39HZG9yQjdwuScfStq7ErWjkYf2h6O44&libraries=places&callback=initMap"async></script> */}
